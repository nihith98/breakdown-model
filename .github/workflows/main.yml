---
name: Java CI with Maven and Docker
on:
  push:
    branches:
      - feature/**
    tags:
      - v*
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - release/**
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          fetch-depth: 0
      - name: Set up JDK 21 and Maven Cache
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: temurin
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: >
            # tag latest for default branch push

            type=edge,branch=${{ github.event.repository.default_branch }}

            # tag based on git tag (e.g., v1.0.0 -> 1.0.0)

            type=ref,event=tag

            # tag based on git branch name (e.g., feature/xyz -> feature-xyz) - only on pull_request or non-default branch push

            type=ref,event=branch,enable=${{ github.ref!= format('refs/heads/{0}', github.event.repository.default_branch) }}

            # tag based on short commit sha

            type=sha,prefix=sha-
      - name: Log in to Docker Hub
        if: github.event_name!= 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name!= 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
